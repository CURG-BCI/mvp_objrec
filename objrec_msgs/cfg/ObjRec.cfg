#!/usr/bin/env python

PACKAGE = "objrec_msgs"
import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

# ObjRec Parameters
gen.add("pair_width", double_t, 0, "", 35.0, 1, 1000)
gen.add("voxel_size", double_t, 0, "", 3.5, 1, 100)

gen.add("object_visibility", double_t, 0, "", 0.25, 0, 1.0)
gen.add("relative_object_size", double_t, 0, "", 0.05, 0, 1.0)
gen.add("relative_number_of_illegal_points", double_t, 0, "", 0.03, 0, 1.0)
gen.add("z_distance_threshold_as_voxel_size_fraction", double_t, 0, "", 3.0, 0.0, 1000.0)
gen.add("normal_estimation_radius", double_t, 0, "", 3.0, 0, 1000)
gen.add("intersection_fraction", double_t, 0, "", 0.09, 0, 1.0)
gen.add("num_threads", int_t, 0, "", 3, 1, 16)

# Plane segmentation parameters 
gen.add("plane_thickness", double_t, 0, "", 15.0, 0, 1000)
gen.add("rel_num_of_plane_points", double_t, 0, "", 0.2, 0, 1.0)

# Other Recognition Parameters
gen.add("success_probability", double_t, 0, "", 0.99, 0, 1.0)
gen.add("use_only_points_above_plane", bool_t, 0, "", True)

# Ros parameters
gen.add("publish_markers", bool_t, 0, "", True)
gen.add("n_clouds_per_recognition", int_t, 0, "", 3, 1, 30)
gen.add("downsample_voxel_size", double_t, 0, "", 3.5, 1, 50)

gen.add("x_clip_min", double_t, 0, "", 2.5, -5, 5)
gen.add("x_clip_max", double_t, 0, "", 2.5, -5, 5)
gen.add("y_clip_min", double_t, 0, "", 2.5, -5, 5)
gen.add("y_clip_max", double_t, 0, "", 2.5, -5, 5)
gen.add("z_clip_min", double_t, 0, "", 2.5, -5, 5)
gen.add("z_clip_max", double_t, 0, "", 2.5, -5, 5)

exit(gen.generate(PACKAGE, "objrec_msgs", "ObjRec"))

